{"version":3,"sources":["components/SearchBar.jsx","components/Modal.jsx","components/ModalContent.jsx","components/App.jsx","index.js"],"names":["SearchBar","onInputChange","event","setState","keyword","target","value","onButtonSubmit","preventDefault","search","url","this","state","console","log","fetch","method","headers","then","response","json","catch","className","type","placeholder","onChange","onClick","React","Component","modalRoot","document","getElementById","Modal","props","element","createElement","appendChild","removeChild","createPortal","children","ModalContent","App","toggleModal","showModal","showRepositories","ReactDOM","render"],"mappings":"gOAwCeA,E,2MApCXC,cAAgB,SAAAC,GACZ,EAAKC,SAAS,CAAEC,QAASF,EAAMG,OAAOC,S,EAE1CC,eAAiB,SAAAL,GACbA,EAAMM,iBACN,EAAKC,U,wEAIL,IAAMC,EAAG,uDAAmDC,KAAKC,MAAMR,SACvES,QAAQC,IAAI,QAASH,KAAKC,OAE1BG,MAAML,EAAK,CACPM,OAAQ,MACRC,QAAS,CACL,OAAU,sBAEfC,MAAK,SAAAC,GAAQ,OAAIN,QAAQC,IAAIK,EAASC,WACxCC,OAAM,SAAAF,GAAQ,OAAIN,QAAQC,IAAI,SAAWK,Q,+BAI1C,OACI,6BACI,0BAAMG,UAAU,aACZ,2BACIC,KAAK,OACLC,YAAY,oBACZC,SAAUd,KAAKV,gBACnB,4BAAQyB,QAASf,KAAKJ,gBAAtB,gB,GA/BIoB,IAAMC,WCGxBC,EAAYC,SAASC,eAAe,SAqB3BC,E,YAlBX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,QAAUJ,SAASK,cAAc,OAHvB,E,iFAMfN,EAAUO,YAAYzB,KAAKuB,W,6CAG3BL,EAAUQ,YAAY1B,KAAKuB,W,+BAI3B,OAAOI,uBAAa3B,KAAKsB,MAAMM,SAAU5B,KAAKuB,a,GAdlCP,IAAMC,WCOXY,EAZM,WAEjB,OACI,6BACI,oCACA,mCACA,mCACA,uCCmCGC,G,kBApCX,WAAYR,GAAQ,IAAD,8BACf,4CAAMA,KAQVS,YAAc,WACV,EAAKvC,SAAS,CACXwC,WAAY,EAAK/B,MAAM+B,aAR1B,EAAK/B,MAAQ,CACTR,QAAS,GACTuC,WAAW,EACXC,iBAAkB,IANP,E,sEAgBT,IACED,EAAchC,KAAKC,MAAnB+B,UACR,OACI,6BACI,2DACA,kBAAC,EAAD,CAAWvC,QAASO,KAAKC,MAAMR,UAC/B,4BAAQsB,QAASf,KAAK+B,aAChBC,EAA2B,cAAf,cAGdA,EACC,kBAAC,EAAD,CAAOrB,UAAU,SACf,kBAAC,EAAD,OACS,U,GA9BdK,IAAMC,YCHxBiB,IAASC,OAAQ,kBAAE,EAAF,MAAYhB,SAASC,eAAe,U","file":"static/js/main.c43d8ed2.chunk.js","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n\n    onInputChange = event => {\n        this.setState({ keyword: event.target.value});\n    }\n    onButtonSubmit = event => {\n        event.preventDefault();\n        this.search()\n    }\n\n    search() {\n        const url = `https://api.github.com/search/repositories?q=${this.state.keyword}`;\n        console.log('state', this.state);\n\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                \"Accept\": \"application.json\"\n            }\n        }).then(response => console.log(response.json()))\n        .catch(response => console.log(\"Error:\" + response));\n        \n    }\n    render() {\n        return (\n            <div>\n                <form className=\"formGroup\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"search repository\"\n                        onChange={this.onInputChange} />\n                    <button onClick={this.onButtonSubmit}>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport { createPortal } from 'react-dom';\n\n\n\nconst modalRoot = document.getElementById('modal');\n\nclass Modal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.element = document.createElement('div');\n    }\n    componentDidMount() {\n        modalRoot.appendChild(this.element);\n    }\n    componentWillUnmount(){\n        modalRoot.removeChild(this.element);\n    }\n\n    render() {\n        return createPortal(this.props.children, this.element);\n               \n    }\n}\n\nexport default Modal;","import React from 'react';\n\nconst ModalContent = () => {\n\n    return (\n        <div>\n            <h3>List</h3>\n            <p>item</p>\n            <p>item</p>\n            <button>X</button>\n        </div>\n    );\n}\n\nexport default ModalContent;","import React from 'react';\nimport SearchBar from './SearchBar';\nimport Modal from './Modal';\nimport ModalContent from './ModalContent';\n\nimport '../index.scss';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            keyword: '',\n            showModal: false,\n            showRepositories: []    \n        };\n    }\n    toggleModal = () => {\n        this.setState({\n           showModal: !this.state.showModal \n        })\n    };\n\n\n    render() {\n        const { showModal } = this.state;\n        return (\n            <div>\n                <h1>Search Repository on Github</h1>\n                <SearchBar keyword={this.state.keyword} />\n                <button onClick={this.toggleModal}>\n                    {!showModal ? 'Open Modal' : 'Close Modal'}\n                </button>\n                {\n                    showModal ?\n                     <Modal className=\"modal\">\n                       <ModalContent />\n                     </Modal> : null\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}