{"ast":null,"code":"var _jsxFileName = \"/Users/paula/Desktop/react_excercise/new-github-search/src/components/App.jsx\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport Modal from './Modal';\nimport ModalContent from './ModalContent';\nimport '../index.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = () => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.state = {\n      keyword: '',\n      showModal: false,\n      items: []\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          showModal = _this$state.showModal,\n          items = _this$state.items;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Search Repository on Github\"), React.createElement(SearchBar, {\n      keyword: this.state.keyword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, !showModal ? 'Open Modal' : 'Close Modal'), showModal ? React.createElement(Modal, {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ModalContent, {\n      title: \"List of repositories\",\n      items: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paula/Desktop/react_excercise/new-github-search/src/components/App.jsx"],"names":["React","SearchBar","Modal","ModalContent","App","Component","constructor","props","toggleModal","setState","showModal","state","keyword","items","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,eAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,WATmB,GASL,MAAM;AAChB,WAAKC,QAAL,CAAc;AACXC,QAAAA,SAAS,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADZ,OAAd;AAGH,KAbkB;;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETF,MAAAA,SAAS,EAAE,KAFF;AAGTG,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAQDC,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKH,KAD7B;AAAA,UACGD,SADH,eACGA,SADH;AAAA,UACcG,KADd,eACcA,KADd;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACE,SAAD,GAAa,YAAb,GAA4B,aADjC,CAHJ,EAOQA,SAAS,GACR,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,sBAArB;AAA6C,MAAA,KAAK,EAAE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADQ,GAGG,IAVpB,CADJ;AAeH;;AAlC6B;;AAqClC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport SearchBar from './SearchBar';\nimport Modal from './Modal';\nimport ModalContent from './ModalContent';\n\nimport '../index.scss';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            keyword: '',\n            showModal: false,\n            items: []    \n        };\n    }\n    toggleModal = () => {\n        this.setState({\n           showModal: !this.state.showModal \n        })\n    };\n\n\n    render() {\n        const { showModal, items } = this.state;\n        return (\n            <div>\n                <h1>Search Repository on Github</h1>\n                <SearchBar keyword={this.state.keyword} />\n                <button onClick={this.toggleModal}>\n                    {!showModal ? 'Open Modal' : 'Close Modal'}\n                </button>\n                {\n                    showModal ?\n                     <Modal className=\"modal\">\n                       <ModalContent title={\"List of repositories\"} items={\"item\"} />\n                     </Modal> : null\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}